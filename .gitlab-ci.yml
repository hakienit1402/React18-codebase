# GitLab CI configuration mirroring local `ci:check` and GitHub Actions

image: node:22

variables:
  NODE_ENV: development
  NPM_CONFIG_FUND: "false"
  NPM_CONFIG_AUDIT: "false"

stages:
  - test
  - build
  - e2e
  - publish

.node_setup: &node_setup
  image: node:22
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
  before_script:
    - node --version
    - npm ci --no-audit --no-fund

quality-and-tests:
  stage: test
  extends: [*node_setup]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - npm run ci:check

build-app:
  stage: build
  extends: [*node_setup]
  needs: ["quality-and-tests"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - npm run build
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - dist/

docker-build:
  stage: publish
  image: docker:26
  services:
    - docker:26-dind
  variables:
    DOCKER_DRIVER: overlay2
  needs: ["build-app"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export IMAGE="$CI_REGISTRY_IMAGE"
    - export TAG="${CI_COMMIT_SHORT_SHA}"
    - docker build -t "$IMAGE:$TAG" -f Dockerfile .
    - docker push "$IMAGE:$TAG"
  artifacts:
    reports:
      dotenv: 
        - image.env

e2e-cypress:
  stage: e2e
  extends: [*node_setup]
  needs: ["build-app"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - npx wait-on -v http-get://web:8080 || true
    - npm run cypress:run
